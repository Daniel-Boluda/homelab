---
- name: Set python interpreter
  import_tasks: python.yml

- name: RW for blikvm
  shell: mount -o remount,rw / && mount -o remount,rw /boot
  args:
    executable: /bin/bash
  changed_when: false
  when: ansible_host == "prusik-ipmi"
  tags:
    - pikvm
    - always

- name: Create user and enable login
  import_tasks: user.yml
  tags:
    - user

- name: Set up sshd
  import_tasks: sshd.yml

- name: Ensure handlers are executed
  meta: flush_handlers

- name: Generate new machine-id
  shell: >
    rm /etc/machine-id && dbus-uuidgen --ensure=/etc/machine-id &&
    rm /var/lib/dbus/machine-id; dbus-uuidgen --ensure && touch /etc/machine-id-new
  args:
    creates: /etc/machine-id-new
  register: first_execution
  tags:
    - additional-disks

- name: First execution
  when: first_execution.changed
  block:
    - name: Change user password
      user:
        name: "{{ prepare_username }}"
        password: "{{ prepare_password }}"
        update_password: always
      when: prepare_password is defined

    - name: Upgrade all packages to the latest version
      apt:
        name: "*"
        state: latest  # noqa: package-latest
        force_apt_get: true
        update_cache: true
      notify: restart server
      when: ansible_host != "prusik-ipmi"

    - name: Restart node if necessary after first upgrade
      meta: flush_handlers

- name: Print additional disk config
  debug:
    var: prepare_additional_disks
  tags:
    - additional-disks

- name: Format disks
  parted:
    device: "{{ item.dev_id }}"
    number: 1
    state: absent
  when: item.force_format | default(prepare_additional_disks_force_format)
  loop: "{{ prepare_additional_disks }}"
  tags:
    - additional-disks

- name: Disable unused services
  systemd:
    name: "{{ item }}"
    enabled: false
    state: stopped
  loop: "{{ prepare_unused_services }}"
  ignore_errors: true

- name: Remove first login file from armbian
  file:
    path: /root/.not_logged_in_yet
    state: absent
  ignore_errors: true

- name: Install basic packages
  apt:
    name: "{{ prepare_basic_packages }}"
    state: present
    force_apt_get: true
    update_cache: true
  when: ansible_host != "prusik-ipmi"

- name: Remove unnecesary packages
  apt:
    name: "{{ prepare_unnecesary_packages }}"
    state: absent
  notify: apt autoremove
  when: ansible_host != "prusik-ipmi"

- name: Disable swap in armbian
  lineinfile:
    path: /etc/default/{{ item }}
    regex: "^ENABLED"
    line: "ENABLED=false"
  # armbian ansible_distribution is Ubuntu
  ignore_errors: true
  when:
    - ansible_architecture == "aarch64"
  loop:
    - armbian-zram-config
    - armbian-ramlog
  notify: restart server
  tags:
    - disable-armbian-services

- name: Move logs to RAM
  import_tasks: logs2ram.yml
  when:
    - ansible_architecture == "aarch64"
    - ansible_os_family == "Debian"
  tags:
    - logs2ram

- name: Remove unused cron
  file:
    state: absent
    path: /etc/cron.d/make_nas_processes_faster

- name: Add CA to CA trust
  copy:
    content: "{{ item.cert }}"
    dest: "/usr/local/share/ca-certificates/{{ item.name }}.crt"
    mode: "0444"
  when:
    - prepare_custom_cas is defined
    - ansible_os_family == "Debian"
  loop: "{{ prepare_custom_cas }}"
  tags:
    - custom-cas
  notify: update-ca-certificates

- name: Modify kernel parameters
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/40-kubernetes-custom.conf
    sysctl_set: true
  loop: "{{ prepare_sysctl }}"
  tags:
    - sysctl

- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  tags:
    - hostname

- name: Set hosts
  template:
    src: hosts.j2
    dest: /etc/hosts
    mode: "0644"
  tags:
    - hostname

- name: Configure journal log
  copy:
    src: journald.conf
    dest: /etc/systemd/journald.conf
    mode: "0644"
  tags:
    - journald
    - logs
  notify: restart systemd-journald

- name: Disable sysstat-collect
  systemd:
    name: sysstat-collect.timer
    daemon_reload: true
    enabled: false
    state: stopped
  ignore_errors: true
  tags:
    - sysstat-collect

- name: Install unattended upgrades
  import_tasks: unattended-upgrades.yml
  when: ansible_host != "prusik-ipmi"
  tags:
    - unattended-upgrades

- name: Fix apparmor config
  import_tasks: apparmor.yml
  when: ansible_host != "prusik-ipmi"
  tags:
    - apparmor
