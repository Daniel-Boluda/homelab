gitea:
  image:
    repository: gitea/gitea
    rootless: true

  strategy:
    type: "Recreate"

  ingress:
    enabled: true
    className: nginx-external
    annotations:
      external-dns.alpha.kubernetes.io/enabled: "true"
      external-dns.alpha.kubernetes.io/target: grigri.cloud
      cert-manager.io/cluster-issuer: letsencrypt-prod-dns
    hosts:
      - host: &host gitea.grigri.cloud
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: gitea-tls-certificate
        hosts:
          - *host

  replicaCount: 1

  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  persistence:
    mount: true
    create: false
    claimName: data-gitea-zfs-0

  gitea:
    admin:
      existingSecret: gitea-admin

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

    config:
      oauth2_client:
        ENABLE_AUTO_REGISTRATION: true
      server:
        LANDING_PAGE: explore
        ROOT_URL: https://gitea.grigri.cloud
        SSH_DOMAIN: gitea.grigri.cloud
        SSH_PORT: 29518
      database:
        DB_TYPE: postgres
        HOST: gitea-postgres:5432
        NAME: gitea
        SSL_MODE: require
        MAX_OPEN_CONNS: 4
        CONN_MAX_LIFE_TIME: 300s
        LOG_SQL: false
      service:
        DISABLE_REGISTRATION: true
      session:
        PROVIDER: memory
      cache:
        ADAPTER: memory
      queue:
        TYPE: level
      log:
        LEVEL: info
      cron:
        NOTICE_ON_SUCCESS: false

    additionalConfigSources:
      - secret:
          secretName: gitea-app-ini-database

    oauth:
      - name: kanidm
        provider: openidConnect
        existingSecret: oidc-client
        autoDiscoverUrl: https://idm.grigri.cloud/oauth2/openid/gitea/.well-known/openid-configuration

  extraContainerVolumeMounts:
    - name: ca-bundle
      mountPath: /etc/ssl/certs/ca-certificates.crt
      readOnly: true

  extraVolumes:
    - name: ca-bundle
      hostPath:
        path: /etc/ssl/certs/ca-certificates.crt
        type: File

  postgresql-ha:
    enabled: false

  postgresql:
    enabled: false

  redis-cluster:
    enabled: false
