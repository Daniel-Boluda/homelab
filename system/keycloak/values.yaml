app-template:
  controllers:
    keycloak:
      labels:
        backup/retain: quaterly
      replicas: 1
      strategy: Recreate
      containers:
        keycloak:
          image:
            repository:  quay.io/keycloak/keycloak
            tag: 26.0.1
          command: ["/bin/sh"]
          args: ["-c", "while true; do sleep 3600; done"] #/opt/keycloak/bin/kc.sh 

          env:
            KC_DB: postgres
            KC_METRICS_ENABLED: true
            KC_LOG_LEVEL: INFO
            TZ: Europe/Madrid
            KC_DB_USERNAME:
              valueFrom:
                secretKeyRef:
                  name: keycloak.keycloak-postgres.credentials.postgresql.acid.zalan.do
                  key: username
            KC_DB_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: keycloak.keycloak-postgres.credentials.postgresql.acid.zalan.do
                  key: password
            KC_DB_URL: "jdbc:postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@keycloak-postgres/keycloak" #"jdbc:postgresql://postgres:5432/keycloak"
          envFrom:
          - secretRef:
              name: keycloak-secret

          resources:
            requests:
              cpu: 10m
              memory: 256Mi
            limits:
              memory: 512Mi
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5

  service:
    keycloak:
      controller: keycloak
      ports:
        http:
          port: 8080
  ingress:
    keycloak:
      enabled: true
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        external-dns.alpha.kubernetes.io/enabled: "true"
        nginx.ingress.kubernetes.io/auth-url: https://kubeadmin.auth.dbcloud.org/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://kubeadmin.auth.dbcloud.org/oauth2/start

      hosts:
      - host: &host keycloak.internal.dbcloud.org
        paths:
        - path: /
          pathType: Prefix
          service:
            identifier: keycloak
            port: http
      tls:
      - hosts:
        - *host
        secretName: keycloak-tls-certificate

    external:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: dbcloud.org
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/auth-url: https://kubeadmin.auth.dbcloud.org/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://kubeadmin.auth.dbcloud.org/oauth2/start

      hosts:
      - host: &host keycloak.dbcloud.org
        paths:
        - path: /
          pathType: Prefix
          service:
            identifier: keycloak
            port: http
      tls:
      - hosts:
        - *host
        secretName: keycloak-external-tls-certificate

  defaultPodOptions:
    securityContext:
      runAsUser: 995
      runAsGroup: 991
      fsGroup: 991
      fsGroupChangePolicy: "OnRootMismatch"

  persistence:
    data:
      enabled: true
      type: emptyDir
      sizeLimit: 5Gi
      advancedMounts:
        whisper:
          whisper:
            - path: /opt/keycloak/data
    providers:
      enabled: true
      type: emptyDir
      sizeLimit: 5Gi
      advancedMounts:
        whisper:
          whisper:
            - path: /opt/keycloak/providers
    themes:
      enabled: true
      type: emptyDir
      sizeLimit: 5Gi
      advancedMounts:
        whisper:
          whisper:
            - path: /opt/keycloak/themes
    
    ##data:
    ##  enabled: true
    ##  globalMounts:
    ##  - path: /opt/keycloak
    ##  existingClaim: data-keycloak