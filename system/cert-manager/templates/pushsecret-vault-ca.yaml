apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: vault-ca
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: k8s-store
  target:
    name: vault-ca
  data:
    - secretKey: api-token
      remoteRef:
        key: /cert-manager/cloudflare
        property: token

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: thanos-s3-secret
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: SecretStore
    name: k8s-store
  target:
    name: thanos-s3-secret
    template:
      data:
        objstore.yml: |
          type: S3
          config:
            bucket: thanos-bucket
            endpoint: rook-ceph-rgw-eu-central-1a.rook-ceph.svc
            access_key: '{{ .AWS_ACCESS_KEY_ID }}'
            secret_key: '{{ .AWS_SECRET_ACCESS_KEY }}'
            insecure: true
  dataFrom:
    - extract:
        key: thanos-bucket

apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: vault-ca
spec:
  refreshInterval: 10s
  secretStoreRefs:
    - name: k8s-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: pokedex-credentials
  data:
    - match:
        secretKey: best-pokemon
        remoteRef:
          remoteKey: remote-best-pokemon
          property: best-pokemon
