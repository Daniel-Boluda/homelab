argo-cd:
  configs:
    cm:
      create: true
      url: https://argocd.internal.dbcloud.org
      exec.enabled: "true"
      oidc.config: |
        name: Keycloak
        issuer: https://keycloak.dbcloud.org/realms/master
        clientID: argocd
        clientSecret: $oidc.keycloak.clientSecret
        requestedScopes: ["openid", "profile", "email", "groups", "argocd-access"]

      # Disable git polling
      timeout.reconciliation: "0"

      statusbadge.enabled: true
      # The health assessment of argoproj.io/Application CRD has been removed in argocd 1.8
      # (see https://github.com/argoproj/argo-cd/issues/3781 for more information)
      # You might need to restore it if you are using app-of-apps pattern and orchestrating
      # synchronization using sync waves. Add the following resource customization in argocd-cm:
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs

      kustomize.buildOptions: --enable-helm

    params:
      controller.status.processors: 5
      controller.operation.processors: 5
      controller.repo.server.timeout.seconds: 300
      server.insecure: true

    rbac:
      create: true
      policy.default: role:''
      policy.csv: |
        g, ArgoCDAdmins, role:admin

    secret:
      createSecret: true

  server:
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 10m
        memory: 64Mi

    ingress:
      enabled: true
      ingressClassName: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        external-dns.alpha.kubernetes.io/enabled: "true"
        nginx.ingress.kubernetes.io/auth-url: https://kubeadmin.auth.dbcloud.org/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://kubeadmin.auth.dbcloud.org/oauth2/start
      hostname: argocd.internal.dbcloud.org
      tls: true
    metrics: &metrics
      enabled: true

  dex:
    enabled: false

  controller:
    resources:
      requests:
        cpu: 1
        memory: 512Mi
      limits:
        cpu: 3
        memory: 3Gi
    metrics: *metrics

  repoServer:
    autoscaling:
      enabled: false
    resources:
      requests:
        cpu: 1
        memory: 512Mi
      limits:
        cpu: 2.5
        memory: 2Gi
    env:
      - name: ARGOCD_EXEC_TIMEOUT
        value: "300s"
    metrics: *metrics

  redis:
    resources:
      limits:
        cpu: 200m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi
    metrics:
      enabled: false
    exporter:
      enabled: false

  applicationSet:
    enabled: true
    resources:
      limits:
        cpu: 400m
        memory: 256Mi
      requests:
        cpu: 10m
        memory: 78Mi

  notifications:
    enabled: true
    argocdUrl: https://argocd.internal.dbcloud.org
    updateStrategy:
      type: Recreate
    secret:
      create: false
    metrics:
      enabled: false
    notifiers:
      service.telegram: |
        token: $telegram-token
    resources:
      requests:
        cpu: 10m
        memory: 64Mi
      limits:
        memory: 128Mi
    subscriptions:
      - recipients:
        - telegram:-1001533258564
        triggers:
          - on-health-degraded
          - on-sync-failed
    templates:
      template.app-deployed: |
        message: |
          *üöÄ{{.app.metadata.name}}*
          _Application {{.app.metadata.name}} is now running new version of deployments manifests_

      template.app-health-degraded: |
        message: |
          *üíî{{.app.metadata.name}}*
          _Application {{.app.metadata.name}} has degraded._
          [Application details]({{.context.argocdUrl}}/applications/{{.app.metadata.name}})
      template.app-sync-failed: |
        message: |
          *‚ùå{{.app.metadata.name}}*
          _The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}_
          [Sync operation details]({{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true)

    triggers:
      trigger.on-deployed: |
        - description: Application is synced and healthy. Triggered once per commit.
          oncePer: app.status.sync.revision
          send:
            - app-deployed
          when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
      trigger.on-health-degraded: |
        - description: Application has degraded
          send:
            - app-health-degraded
          when: app.status.health.status == 'Degraded' and app.metadata.name != 'root'
      trigger.on-sync-failed: |
        - description: Application syncing has failed
          send:
            - app-sync-failed
          when: app.status.operationState.phase in ['Error', 'Failed']
