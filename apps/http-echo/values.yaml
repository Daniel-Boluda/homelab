app-template:
  controller:
    replicas: 1

  image:
    repository: mendhak/http-https-echo
    tag: 30

  enableServiceLinks: false
  service:
    main:
      ports:
        http:
          port: 8080

  ingress:
    main:
      enabled: true
      ingressClassName: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        external-dns.alpha.kubernetes.io/enabled: "true"
      hosts:
        - host: &host http-echo.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host
          secretName: http-echo-tls-certificate
    external:
      enabled: true
      ingressClassName: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/auth-url: https://auth.grigri.cloud/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://auth.grigri.cloud/oauth2/start
        nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User, X-Auth-Request-Groups, X-Auth-Request-Email, X-Auth-Request-Preferred-Username"
      hosts:
        - host: &host http-echo.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host
          secretName: http-echo-external-tls-certificate

  securityContext:
    runAsUser: 1000

  resources:
    requests:
      cpu: 10m
      memory: 4Mi
    limits:
      cpu: 200m
      memory: 256Mi

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/instance: http-echo
          app.kubernetes.io/name: http-echo
