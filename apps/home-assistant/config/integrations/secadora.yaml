input_select:
  secadora_status_internal:
    name: Estado secadora (interno)
    options:
      - Apagada
      - Standby
      - Secando
    initial: Apagada
    icon: mdi:tumble-dryer

input_datetime:
  secadora_last_status_change:
    name: Último cambio de estado secadora
    has_date: true
    has_time: true

# Sensor de solo lectura para la UI
template:
  - sensor:
      - name: "secadora_status"
        unique_id: secadora_status
        icon: mdi:tumble-dryer
        state: "{{ states('input_select.secadora_status_internal') }}"

automation:
  - alias: Control secadora simple (sin histéresis)
    description: Actualiza estado inmediato por potencia y envía avisos (Standby>10 min y Secando→Standby)
    mode: single
    trigger:
      # Recalcular estado siempre que cambie la potencia
      - platform: state
        entity_id: sensor.enchufe_secadora_relay_power
        id: "actualizar_estado"

      # Aviso si lleva 10 min en Standby
      - platform: state
        entity_id: input_select.secadora_status_internal
        to: "Standby"
        for: "00:10:00"
        id: "aviso_standby_largo"

      # Aviso cuando pasa de Secando a Standby
      - platform: state
        entity_id: input_select.secadora_status_internal
        from: "Secando"
        to: "Standby"
        id: "aviso_fin_secado"

    action:
      - choose:
          # 1) Actualizar estado en función de la potencia (inmediato)
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'actualizar_estado' }}"
            sequence:
              - variables:
                  power: "{{ states('sensor.enchufe_secadora_relay_power') | float(0) }}"
                  current: "{{ states('input_select.secadora_status_internal') }}"
                  next: >-
                    {% if power < 2 %}Apagada
                    {% elif power > 10 %}Secando
                    {% else %}Standby
                    {% endif %}
              # Solo cambia si realmente hay cambio
              - condition: template
                value_template: "{{ current != next }}"
              - service: input_select.select_option
                target:
                  entity_id: input_select.secadora_status_internal
                data:
                  option: "{{ next }}"
              - service: input_datetime.set_datetime
                target:
                  entity_id: input_datetime.secadora_last_status_change
                data:
                  timestamp: "{{ now().timestamp() }}"

          # 2) Aviso: Standby > 10 minutos
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'aviso_standby_largo' }}"
              - condition: state
                entity_id: input_boolean.home_announcements_active
                state: "on"
            sequence:
              - service: notify.send_message
                data:
                  message: "La secadora lleva más de 10 minutos en standby."
                target:
                  device_id:
                    - 54e59c960e82f66b7a554608a8e30f28

          # 3) Aviso: paso de Secando → Standby
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'aviso_fin_secado' }}"
              - condition: state
                entity_id: input_boolean.home_announcements_active
                state: "on"
            sequence:
              - service: notify.send_message
                data:
                  message: "La secadora ha terminado y está en standby."
                target:
                  device_id:
                    - 54e59c960e82f66b7a554608a8e30f28
