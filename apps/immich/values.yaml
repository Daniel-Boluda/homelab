app-template:
  controllers:
    server:
      strategy: RollingUpdate
      pod: &pod
        enableServiceLinks: false
        securityContext:
          runAsUser: 2000
          runAsGroup: 2000
          runAsNonRoot: true
          fsGroup: 2000
          fsGroupChangePolicy: OnRootMismatch
      containers:
        main:
          image: &image
            repository: ghcr.io/immich-app/immich-server
            tag: v1.101.0
          command: /bin/sh
          args:
            - ./start-server.sh
          env: &env
            DB_PORT: "5432"
            ENABLE_MAPBOX: "true"
            # "LOG_LEVEL" must be one of [verbose, debug, log, warn, error, fatal]
            LOG_LEVEL: log
            NODE_ENV: "production"
            REDIS_HOSTNAME: immich-redis
            REDIS_PORT: "6379"
            IMMICH_SERVER_URL: http://immich-server:3001
            IMMICH_MACHINE_LEARNING_URL: http://immich-ml:3003
            A_REPLACE_DB_HOSTNAME: immich-postgres
            A_REPLACE_DB_DATABASE_NAME: immich
            A_REPLACE_DB_USERNAME:
              valueFrom:
                secretKeyRef:
                  name: immich.immich-postgres.credentials.postgresql.acid.zalan.do
                  key: username
            A_REPLACE_DB_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: immich.immich-postgres.credentials.postgresql.acid.zalan.do
                  key: password
            DB_URL: postgresql://$(A_REPLACE_DB_USERNAME):$(A_REPLACE_DB_PASSWORD)@$(A_REPLACE_DB_HOSTNAME):5432/$(A_REPLACE_DB_DATABASE_NAME)?sslmode=no-verify
            IMMICH_METRICS: true
          envFrom: &envFrom
            - secretRef:
                name: immich-secrets
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 256Mi
          probes: &probes
            liveness:
              enabled: true
            readiness:
              enabled: true
    microservices:
      pod: *pod
      containers:
        main:
          image: *image
          command: /bin/sh
          args:
            - ./start-microservices.sh
          env: *env
          envFrom: *envFrom
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 256Mi
          probes:
            liveness:
              enabled: true
              tcpSocket: &tcpSocket
                port: 3001
            readiness:
              enabled: true
              tcpSocket: *tcpSocket
    ml:
      pod: *pod
      containers:
        main:
          image:
            repository: ghcr.io/immich-app/immich-machine-learning
            tag: v1.101.0
          env: *env
          envFrom: *envFrom
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
            limits:
              cpu: "4"
              memory: 10Gi
          probes: *probes
    redis:
      containers:
        main:
          image:
            repository: public.ecr.aws/docker/library/redis
            tag: 7.2.4
          env:
            REDIS_REPLICATION_MODE: master
          command: ["redis-server"]
          probes: *probes

  service:
    server:
      controller: server
      ports:
        http:
          port: 3001
    ml:
      controller: ml
      ports:
        http:
          port: 3003
    redis:
      controller: redis
      ports:
        http:
          port: 6379

  defaultPodOptions:
    nodeSelector:
      kubernetes.io/hostname: prusik

  ingress:
    immich:
      enabled: true
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        external-dns.alpha.kubernetes.io/enabled: "true"
      hosts:
        - host: &host photos.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: server
                port: http
      tls:
        - hosts:
            - *host
          secretName: immich-tls-certificate
    external:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
      hosts:
        - host: &host photos.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: server
                port: http
      tls:
        - hosts:
            - *host
          secretName: immich-external-tls-certificate

  persistence:
    library:
      existingClaim: immich-data
      advancedMounts:
        server:
          main:
            - path: /usr/src/app/upload
        microservices:
          main:
            - path: /usr/src/app/upload
    transformers-cache:
      type: emptyDir
      advancedMounts:
        server:
          main:
            - path: /usr/src/app/.transformers_cache
        microservices:
          main:
            - path: /usr/src/app/.transformers_cache
    model-cache:
      type: emptyDir
      advancedMounts:
        ml:
          main:
            - path: /cache
