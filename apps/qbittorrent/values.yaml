app-template:
  controllers:
    qbittorrent:
      labels:
        backup/retain: quaterly
      replicas: 1
      containers:
        qbittorrent:
          image:
            repository: ghcr.io/onedr0p/qbittorrent
            tag: 4.6.5@sha256:c019af23966ebafcaf1713d4553bc043246858b711a7d57d8bee358a89990a3e

          env:
            UMASK: "022"
            QBITTORRENT__PORT: &port 8080
            QBITTORRENT__USE_PROFILE: "true"

          resources:
            requests:
              cpu: 600m
              memory: 5.0Gi
            limits:
              memory: 5.0Gi

          probes:
            liveness: &probe
              enabled: true
              custom: true
              spec:
                failureThreshold: 3
                periodSeconds: 10
                tcpSocket:
                  port: *port
                timeoutSeconds: 1
            readiness: *probe
        metrics:
          image:
            repository: ghcr.io/esanchezm/prometheus-qbittorrent-exporter
            tag: latest@sha256:340a6d43797e2944a6babd6cadc7160e87d30b57bdf401aef57eccbd600d98ce
          env:
            QBITTORRENT_HOST: localhost
            QBITTORRENT_PORT: *port
          resources:
            requests:
              cpu: 15m
              memory: 19Mi
            limits:
              memory: 100Mi

          ports:
          - name: metrics
            containerPort: &metrics_port 8000
            protocol: TCP

          probes:
            liveness: &metrics_probe
              enabled: true
              custom: true
              spec:
                failureThreshold: 3
                periodSeconds: 30
                tcpSocket:
                  port: *metrics_port
                timeoutSeconds: 1
            readiness: *metrics_probe

  defaultPodOptions:
    securityContext:
      runAsUser: 995
      runAsGroup: 991
      fsGroup: 991
      fsGroupChangePolicy: "OnRootMismatch"

    hostname: qbittorrent

  service:
    qbittorrent:
      controller: qbittorrent
      ports:
        http:
          port: *port
        metrics:
          port: *metrics_port

    bittorrent:
      controller: qbittorrent
      type: LoadBalancer
      annotations:
        metallb.universe.tf/loadBalancerIPs: "192.168.1.236"
        external-dns.alpha.kubernetes.io/enabled: "true"
      externalTrafficPolicy: Local
      ports:
        bittorrent:
          enabled: true
          port: 50413
          protocol: TCP
          targetPort: 50413

  ingress:
    qbittorrent:
      enabled: true
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        external-dns.alpha.kubernetes.io/enabled: "true"
      hosts:
      - host: &host qbittorrent.internal.dbcloud.org
        paths:
        - path: /
          pathType: Prefix
          service:
            identifier: qbittorrent
            port: http
      tls:
      - hosts:
        - *host
        secretName: qbittorrent-tls-certificate

    external:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: dbcloud.org
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/auth-url: https://mediaserver.auth.dbcloud.org/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://mediaserver.auth.dbcloud.org/oauth2/start
      hosts:
      - host: &host qbittorrent.dbcloud.org
        paths:
        - path: /
          service:
            identifier: qbittorrent
            port: http
      tls:
      - hosts:
        - *host
        secretName: qbittorrent-external-tls-certificate

  persistence:
    config:
      enabled: true
      globalMounts:
      - path: /config
      existingClaim: config-qbittorrent

    series:
      enabled: true
      type: hostPath
      hostPath: /datasets/series/download
      globalMounts:
      - path: /datasets/series/download

    peliculas:
      enabled: true
      type: hostPath
      hostPath: /datasets/peliculas/download
      globalMounts:
      - path: /datasets/peliculas/download

    music:
      enabled: true
      type: hostPath
      hostPath: /datasets/music/download
      globalMounts:
      - path: /datasets/music/download

    download:
      enabled: true
      type: hostPath
      hostPath: /datasets/download
      globalMounts:
      - path: /datasets/download
